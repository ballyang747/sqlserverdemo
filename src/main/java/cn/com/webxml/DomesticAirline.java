package cn.com.webxml;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * <a href="http://www.webxml.com.cn/" target="_blank">WebXml.com.cn</a> <strong>国内飞机航班时刻表 WEB 服务</strong>提供：通过出发城市和到达城市查询飞机航班、出发和到达时间、飞行周期、航空公司、机型等信息。国内飞机航班时刻表 WEB 服务提供的飞机航班时刻表数据仅供参考，如有异议请以当地飞机场提供的讯息为准。</br>此国内飞机航班时刻表Web Services请不要用于任何商业目的，若有需要请<a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank">联系我们</a>，欢迎技术交流。 QQ：8409035<br /><strong>使用本站 WEB 服务请注明或链接本站：http://www.webxml.com.cn/ 感谢大家的支持</strong>！<br /><br />&nbsp;
 *
 * This class was generated by Apache CXF 3.2.4
 * 2018-10-02T11:49:37.615+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "DomesticAirline",
                  wsdlLocation = "http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl",
                  targetNamespace = "http://WebXml.com.cn/")
public class DomesticAirline extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WebXml.com.cn/", "DomesticAirline");
    public final static QName DomesticAirlineHttpPost = new QName("http://WebXml.com.cn/", "DomesticAirlineHttpPost");
    public final static QName DomesticAirlineSoap12 = new QName("http://WebXml.com.cn/", "DomesticAirlineSoap12");
    public final static QName DomesticAirlineSoap = new QName("http://WebXml.com.cn/", "DomesticAirlineSoap");
    public final static QName DomesticAirlineHttpGet = new QName("http://WebXml.com.cn/", "DomesticAirlineHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/ballyang/Desktop/DomesticAirline.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(DomesticAirline.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/ballyang/Desktop/DomesticAirline.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DomesticAirline(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DomesticAirline(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DomesticAirline() {
        super(WSDL_LOCATION, SERVICE);
    }

    public DomesticAirline(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public DomesticAirline(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public DomesticAirline(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns DomesticAirlineHttpPost
     */
    @WebEndpoint(name = "DomesticAirlineHttpPost")
    public DomesticAirlineHttpPost getDomesticAirlineHttpPost() {
        return super.getPort(DomesticAirlineHttpPost, DomesticAirlineHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DomesticAirlineHttpPost
     */
    @WebEndpoint(name = "DomesticAirlineHttpPost")
    public DomesticAirlineHttpPost getDomesticAirlineHttpPost(WebServiceFeature... features) {
        return super.getPort(DomesticAirlineHttpPost, DomesticAirlineHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns DomesticAirlineSoap
     */
    @WebEndpoint(name = "DomesticAirlineSoap12")
    public DomesticAirlineSoap getDomesticAirlineSoap12() {
        return super.getPort(DomesticAirlineSoap12, DomesticAirlineSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DomesticAirlineSoap
     */
    @WebEndpoint(name = "DomesticAirlineSoap12")
    public DomesticAirlineSoap getDomesticAirlineSoap12(WebServiceFeature... features) {
        return super.getPort(DomesticAirlineSoap12, DomesticAirlineSoap.class, features);
    }


    /**
     *
     * @return
     *     returns DomesticAirlineSoap
     */
    @WebEndpoint(name = "DomesticAirlineSoap")
    public DomesticAirlineSoap getDomesticAirlineSoap() {
        return super.getPort(DomesticAirlineSoap, DomesticAirlineSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DomesticAirlineSoap
     */
    @WebEndpoint(name = "DomesticAirlineSoap")
    public DomesticAirlineSoap getDomesticAirlineSoap(WebServiceFeature... features) {
        return super.getPort(DomesticAirlineSoap, DomesticAirlineSoap.class, features);
    }


    /**
     *
     * @return
     *     returns DomesticAirlineHttpGet
     */
    @WebEndpoint(name = "DomesticAirlineHttpGet")
    public DomesticAirlineHttpGet getDomesticAirlineHttpGet() {
        return super.getPort(DomesticAirlineHttpGet, DomesticAirlineHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DomesticAirlineHttpGet
     */
    @WebEndpoint(name = "DomesticAirlineHttpGet")
    public DomesticAirlineHttpGet getDomesticAirlineHttpGet(WebServiceFeature... features) {
        return super.getPort(DomesticAirlineHttpGet, DomesticAirlineHttpGet.class, features);
    }

}
